# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: SwizlyPeasy.Gateway CI

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  CI_Pipeline:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore SwizlyPeasy.Gateway.sln
    - name: Build
      run: dotnet build --no-restore SwizlyPeasy.Gateway.sln
    - name: Unit Test
      run: dotnet test --no-build --filter 'FullyQualifiedName!~IntegrationTest' SwizlyPeasy.Gateway.sln /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=opencover
    - name: Start Multi Containers
      run: docker-compose -f Test/SwizlyPeasy.Test.IntegrationTest/Docker/docker-compose.yml -f Test/SwizlyPeasy.Test.IntegrationTest/Docker/docker-compose.override.yml up -d
    - name: Sleep for 20 seconds
      run: sleep 20s
      shell: bash
    - name: Integration Test
      run: dotnet test --no-build --filter 'FullyQualifiedName!~UnitTest' SwizlyPeasy.Gateway.sln /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=opencover
    - name: SonarScanner for .NET 7 with pull request decoration support
      uses: highbyte/sonarscan-dotnet@v2.2.2
      with:
        sonarProjectKey: ggnaegi_SwizlyPeasy.Gateway
        sonarProjectName:  SwizlyPeasy.Gateway
        sonarOrganization: ggnaegi
        dotnetBuildArguments: SwizlyPeasy.Gateway.sln
        dotnetDisableTests: true
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/*.opencover.xml" /d:sonar.verbose=true /d:sonar.scm.exclusions.disabled=true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
